name: Daily Commodity Data Refresh

on:
  schedule:
    # Run at midnight UTC every day (00:00)
    - cron: '0 0 * * *'
  workflow_dispatch:  # Allow manual triggering for testing

# Add permissions for the workflow
permissions:
  contents: write  # Allow writing to repository
  actions: read    # Allow reading workflow info

jobs:
  refresh-data:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0  # Fetch full history for proper git operations
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Debug - Show environment
      run: |
        pwd
        ls -la
        echo "Python path:"
        python -c "import sys; print('\n'.join(sys.path))"
        
    - name: Run daily data refresh
      run: |
        export PYTHONPATH="${PYTHONPATH}:$(pwd)"
        python tasks/daily_data_refresh.py
      timeout-minutes: 15  # Add timeout protection
      
    - name: Check if database was updated
      run: |
        if [ -f "commodities.db" ]; then
          echo "✅ Database file exists and was updated"
          ls -la commodities.db
        else
          echo "❌ Warning: Database file not found"
          exit 1
        fi
      
    - name: Commit and push updated database
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Check if there are any changes
        if [ -n "$(git status --porcelain)" ]; then
          echo "Changes detected, committing..."
          git add commodities.db
          git commit -m "Daily data refresh: $(date '+%Y-%m-%d %H:%M:%S UTC')"
          
          # Try to push with error handling
          if git push; then
            echo "✅ Successfully pushed changes"
          else
            echo "❌ Failed to push changes - this might be due to branch protection rules"
            echo "The database was still updated successfully"
          fi
        else
          echo "No changes to commit"
        fi
      
    - name: Upload database as artifact (backup)
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: commodities-db-${{ github.run_number }}
        path: commodities.db
        retention-days: 7